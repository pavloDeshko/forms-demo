{"version":3,"sources":["formComponents.js","Form.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["Check","this","props","value","text","onChange","e","target","checked","React","PureComponent","Container","children","activeKey","bordered","Panel","header","showArrow","key","Options","options","Group","Number","precision","Decimal","dec","Text","TextArea","placeholder","maxLength","rows","Form","state","spec","dataArray","fetchSpec","ajax","aja","url","on","data","setState","fillEmpty","err","go","toChange","pair","console","dir","newData","Object","assign","off","map","f","field","Component","Generic","num","type","common","nextValue","length","label","Error","root","result","dic","N","L","V","T","trav","r","forEach","ch","App","className","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.321f4d5d.chunk.js","sourcesContent":["import React from 'react'\r\nimport types from 'prop-types'\r\nimport {Checkbox, Radio, Collapse, InputNumber, Input} from 'antd'\r\n\r\nexport class Check extends React.PureComponent{\r\n\trender(){\r\n\t\tconst {value,text} = this.props\r\n\t\tconst toChange = e=>this.props.onChange(e.target.checked)\r\n\t\treturn <Checkbox onChange={toChange} checked={value}>{text}</Checkbox>\r\n\t}\r\n}\r\n\r\nCheck.propTypes = {\r\n\tonChange : types.func.isRequired,\r\n\tvalue : types.bool.isRequired,\r\n\ttext : types.string.isRequired\r\n}\r\n\r\nexport class Container extends React.PureComponent{\r\n\trender(){\r\n\t\tconst {value,text,children} = this.props\r\n\t\treturn <Collapse activeKey={value?1:[]} bordered={true}>\r\n\t\t  <Collapse.Panel header={<Check onChange={this.props.onChange}\r\n\t\t      {...{value,text}} />} showArrow={false} key={1}>\r\n\t\t\t{children}\r\n\t\t  </Collapse.Panel>\r\n\t\t</Collapse>\r\n\t}\r\n}\r\n\r\nContainer.propTypes = {\r\n\tonChange : types.func.isRequired,\r\n\tvalue : types.bool.isRequired,\r\n\ttext : types.string.isRequired,\r\n\tchildren : types.arrayOf(types.node).isRequired\r\n}\r\n\r\nexport class Options extends React.PureComponent{\r\n\trender(){\r\n\t\tconst {value,text,options} = this.props\r\n\t\tconst toChange = e=>this.props.onChange(e.target.value)\r\n\t\treturn <div>\r\n\t\t  <span>{text+':'}</span>\r\n\t      <Radio.Group onChange={toChange}{...{value, options}} /> \r\n\t\t</div>\r\n\t}\r\n}\r\n\r\nOptions.propTypes = {\r\n\tonChange : types.func.isRequired,\r\n\tvalue : types.any.isRequired,\r\n\ttext : types.string.isRequired,\r\n\toptions : types.objectOf(types.string).isRequired\r\n}\r\n\r\nexport class Number extends React.PureComponent{\r\n\trender(){\r\n\t  const {onChange,value,text} = this.props\r\n\t  return <label>\r\n\t    <InputNumber onChange={onChange} value={value} precision={0} />\r\n\t\t{text}\r\n\t  </label>\r\n\t}\r\n}\r\n\r\nNumber.propTypes = {\r\n\tonChange : types.func.isRequired,\r\n\tvalue : types.number.isRequired,\r\n\ttext : types.string.isRequired,\r\n}\r\n\r\nexport class Decimal extends React.PureComponent{\r\n\trender(){\r\n\t  const {onChange,value,text,dec} = this.props\r\n\t  return <label>\r\n\t    <InputNumber onChange={onChange} value={value} precision={dec} />\r\n\t\t{text}\r\n\t  </label>\r\n\t}\r\n}\r\n\r\nDecimal.propTypes = {\r\n\tonChange : types.func.isRequired,\r\n\tvalue : types.number.isRequired,\r\n\ttext : types.string.isRequired,\r\n\tdec : types.number\r\n}\r\n\r\nexport class Text extends React.PureComponent{\r\n\trender(){\r\n      const {value,text} = this.props\r\n\t  const toChange = e=>this.props.onChange(e.target.value)\r\n\t  return <label>{text}\r\n\t    <Input.TextArea onChange={toChange} value={value} placeholder=\"...\" \r\n\t\t  maxLength={900} rows={3} /> \r\n\t\t  \r\n\t  </label>\r\n\t}\r\n}\r\n\r\nText.propTypes = {\r\n\tonChange : types.func.isRequired,\r\n\tvalue : types.string.isRequired,\r\n\ttext : types.string.isRequired,\r\n}\r\n","import React from 'react'\r\nimport types from 'prop-types'\r\nimport './Form.css';\r\nimport aja from 'aja'\r\n\r\nimport {Check, Container, Options, Number, Decimal, Text} from './formComponents.js'\r\nexport class Form extends React.Component{\r\n\tconstructor(props){\r\n\t\tsuper(props)\r\n\t\tthis.state = {spec:null,dataArray:{}}\r\n\t\tthis.fetchSpec = function(){\r\n\t\t  this.ajax = aja()\r\n\t\t   .url(process.env.PUBLIC_URL+'/Form1.json')\r\n\t\t   .on('success',data=>{\r\n\t\t\t   this.setState({dataArray:fillEmpty(data)})\r\n\t\t\t   this.setState({spec:data})\r\n\t\t   })\r\n\t\t   .on('failure',err=>this.fetchSpec)\r\n\t\t   .go()\r\n\t\t}\t\t\r\n\t\tthis.toChange = pair=>{\r\n\t\t\tconsole.dir(pair)\r\n\t\t\tconst newData = Object.assign({},this.state.dataArray,pair)\r\n\t\t    this.setState({dataArray:newData})\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount(){\r\n\t\tthis.fetchSpec()\t\r\n\t}\r\n\tcomponentWillUnmount(){\r\n\t\tthis.ajax.off(\"success\")\r\n\t\tthis.ajax.off(\"failure\")\r\n\t}\r\n\trender(){\r\n\t\t\r\n\t\treturn this.state.spec ? <div>\r\n\t\t  {this.state.spec.children.map(f=>(<\r\n\t\t    Generic onChange={this.toChange} field={f} dataArray={this.state.dataArray} \r\n\t      />))}\r\n\t\t</div>: 'Spec is loading...'\r\n\t}\r\n}\r\n\r\nexport class Generic extends React.Component{\r\n\t/* shouldComponentUpdate(nextProps){\r\n\t\tconst num = this.props.field.num\r\n\t\tif(nextProps.dataArray[num] === this.props.dataArray[num] && \r\n\t\t  nextProps.field === this.props.field){ return false}\r\n\t\telse {return true}\r\n\t} */\r\n\trender(){\r\n\t\tconst {num,type,dec,data,children} = this.props.field\r\n\t\tconst value = this.props.dataArray[num]\r\n\t\tconst toChange = nextValue=>this.props.onChange({[num]:nextValue})\r\n\t\tconst common = {onChange:toChange,value,text:data}\r\n\t\t\r\n\t\tif(type == 'L' && children.length>0){  \r\n\t\t\treturn <Container {...common} children={\r\n\t\t\t\tchildren.map(f=>(<Generic \r\n\t\t\t\t  onChange={this.props.onChange} field={f} dataArray={this.props.dataArray}/>))\r\n\t\t\t}/>\r\n\t\t}else if(type == 'L'){\r\n\t\t\treturn <Check {...common}  />\r\n\t\t}else if(type == 'V' && children.length>0){\r\n\t\t\treturn <Options {...common} options={\r\n\t\t\t\tchildren.map(f=>({label:f.data,value:f.num}))\r\n\t\t\t}/>\r\n\t\t}else if(type == 'N' && dec){\r\n\t\t\treturn <Decimal {...common} dec={dec} />\r\n\t\t}else if(type == 'N'){\r\n\t\t\treturn <Number {...common} />\r\n\t\t}else if(type == 'T'){\r\n\t\t\treturn <Text {...common} />\r\n\t\t}else{\r\n\t\t\t\r\n\t\t\tconsole.dir(this.props.field)\r\n\t\t\tthrow new Error('Problems with your spec, wrong field.')\r\n\t\t}\r\n\t\t\r\n\t}\r\n}\r\n\r\nGeneric.propTypes = {\r\n\tonChange: types.func.isRequired,\r\n\tfield: types.object.isRequired,\r\n\tdataArray: types.object.isRequired\r\n}\r\n\r\nfunction fillEmpty(root){\r\n\tlet result = {}\r\n\tconst dic = {\r\n\t\tN:0,\r\n\t\tL:false,\r\n\t\tV:null,\r\n\t\tT:''\r\n\t}\r\n    function trav(r){\r\n\t\tr.children.forEach(ch=>{\r\n\t\t\tresult[ch.num]=dic[ch.type]\r\n\t\t\ttrav(ch)\r\n\t\t})\r\n\t}\r\n\ttrav(root)\r\n\treturn result\r\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport {Form} from './Form.js'\n\nfunction App() {\n  return (\n    <div className=\"Form\">\n      <Form/>\n\t \n    </div>\n  );\n}\n\nexport default App;\n\n/* <header className=\"App-header\">\n      </header>\n\n<img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a> */\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}